{
  "comments": [
    {
      "key": {
        "uuid": "AAAAPn//+6o\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 371,
      "author": {
        "id": 1063
      },
      "writtenOn": "2012-01-27T19:11:50Z",
      "side": 1,
      "message": "This should be NULL checked, even if it\u0027s just paranoia.",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//+5k\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 371,
      "author": {
        "id": 2567
      },
      "writtenOn": "2012-01-27T20:19:21Z",
      "side": 1,
      "message": "Agreed. This should be checked.",
      "parentUuid": "AAAAPn//+6o\u003d",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//+6c\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 374,
      "author": {
        "id": 1063
      },
      "writtenOn": "2012-01-27T19:11:50Z",
      "side": 1,
      "message": "The return value of this should be checked for being \u003d\u003d 7 ... even if it\u0027s just paranoia as well.",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//+5o\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 374,
      "author": {
        "id": 2567
      },
      "writtenOn": "2012-01-27T20:19:21Z",
      "side": 1,
      "message": "Shouldn\u0027t this rather be checked for not being \u003c 0?\nSince fscanf returns the amount of items scanned and gives negative if no match was found. Also, even if this would be 0 the while would not run. So checking the return value of fscanf should be obsolete, shouldn\u0027t it?",
      "parentUuid": "AAAAPn//+6c\u003d",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//+40\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 374,
      "author": {
        "id": 1063
      },
      "writtenOn": "2012-01-27T20:38:59Z",
      "side": 1,
      "message": "Well, if it would return 1, the loop would run with end and perms being invalid.\nUnlikely, I know, but I don\u0027t see a strong reason to not fully check it.",
      "parentUuid": "AAAAPn//+5o\u003d",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//+4o\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 374,
      "author": {
        "id": 2567
      },
      "writtenOn": "2012-01-27T21:05:47Z",
      "side": 1,
      "message": "Not unlikely, impossible. At least heap and stack are always there, so another check would mean more code that does not need to be there and slows things down ;)\nIt either returns a negative value or \u003e\u003d2. nothing in between is possible how I see it at least.",
      "parentUuid": "AAAAPn//+40\u003d",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//+3Y\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 374,
      "author": {
        "id": 1063
      },
      "writtenOn": "2012-01-27T22:05:53Z",
      "side": 1,
      "message": "How would a !\u003d 0 check (which is currently there) be slower than a !\u003d 8 check?",
      "parentUuid": "AAAAPn//+4o\u003d",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//+2A\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 374,
      "author": {
        "id": 2567
      },
      "writtenOn": "2012-01-28T00:13:03Z",
      "side": 1,
      "message": "Not at all. I stand corrected.",
      "parentUuid": "AAAAPn//+3Y\u003d",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//+3U\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 384,
      "author": {
        "id": 1063
      },
      "writtenOn": "2012-01-27T22:05:53Z",
      "side": 1,
      "message": "Also, can you please adhere to the coding style here and below (if keeping that code)?\n\nif (ch \u003d\u003d \u0027\\n\u0027 || ch \u003d\u003d EOF) {\n    break;\n}",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//+18\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 384,
      "author": {
        "id": 2567
      },
      "writtenOn": "2012-01-28T00:13:03Z",
      "side": 1,
      "message": "Yes ofc, in fact I already did that, but not yet resubmitted.",
      "parentUuid": "AAAAPn//+3U\u003d",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//+6I\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 392,
      "author": {
        "id": 1063
      },
      "writtenOn": "2012-01-27T19:11:50Z",
      "side": 1,
      "message": "This looks a bit weird to me. Isn\u0027t this expressable by fscanf as well? E.g.\n\n\"%lx-%lx %4s %lx %lx:%lx %ld %100s\"\n\nThe last string then just would need to be ltrim\u0027ed (p \u003d section; while (isspace(*p)) p++; ) Am I missing something there?",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//+5U\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 392,
      "author": {
        "id": 2567
      },
      "writtenOn": "2012-01-27T20:19:21Z",
      "side": 1,
      "message": "fscanf would do that for all list entries, we just want the current one (that is read by line 373/4).\nThis should avoid unnecessary operations, hence increase speed, which is important at this point.\n\nCorrect me if I am wrong ;)",
      "parentUuid": "AAAAPn//+6I\u003d",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//+44\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 392,
      "author": {
        "id": 1063
      },
      "writtenOn": "2012-01-27T20:38:59Z",
      "side": 1,
      "message": "I meant replacing line 373/374 by an fscanf with the syntax I suggested, sorry for being unclear. In order to make it read the lines one-by-one, I guess a \\n was missing. So my suggestion basically is to replace line 373 by\n\nwhile(fscanf(fp,\"%lx-%lx %4s %lx %lx:%lx %ld %100s\\n\",\n                  \u0026start,\u0026end,perms,\u0026misc,\u0026misc,\u0026misc,\u0026misc, section) \u003d\u003d 8)",
      "parentUuid": "AAAAPn//+5U\u003d",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//+4M\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 392,
      "author": {
        "id": 2567
      },
      "writtenOn": "2012-01-27T21:05:47Z",
      "side": 1,
      "message": "To be completely honest, I am not quite sure if this is such a good idea.\nI need to test this first.\nBut I think that this code should perform much faster than fscanf.",
      "parentUuid": "AAAAPn//+44\u003d",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//+3g\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 392,
      "author": {
        "id": 1063
      },
      "writtenOn": "2012-01-27T22:05:53Z",
      "side": 1,
      "message": "... at the expense of being much less readable. Are you sure that this code, which runs once per process startup, is _that_ performance critical? Premature optimization is the root of all evil ;)",
      "parentUuid": "AAAAPn//+4M\u003d",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//+14\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 392,
      "author": {
        "id": 2567
      },
      "writtenOn": "2012-01-28T00:13:03Z",
      "side": 1,
      "message": "I think we need a third reviewer :P\nI will bow down to the masses, though I think that the current code is better ;)\nHow readable it is does not concern me, it needs to do what it is supposed to, in the best possible way. Look at Assembly Code in the linux kernel. Readable? My *ss! LOL :-D\npremature code deoptimization in favor of making it readable is the second root of all evil :-p",
      "parentUuid": "AAAAPn//+3g\u003d",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//+4w\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 407,
      "author": {
        "id": 1063
      },
      "writtenOn": "2012-01-27T20:38:59Z",
      "side": 1,
      "message": "Uh, where is the fclose()?",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAAPn//+4I\u003d",
        "filename": "vm/native/dalvik_system_Zygote.c",
        "patchSetId": 1
      },
      "lineNbr": 407,
      "author": {
        "id": 2567
      },
      "writtenOn": "2012-01-27T21:05:47Z",
      "side": 1,
      "message": "currently in miami, chilling a bit ^^\nThanks for finding ;)",
      "parentUuid": "AAAAPn//+4w\u003d",
      "revId": "6f4bb16da512e2c11325f00673a7719dd4bbc782",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    }
  ]
}